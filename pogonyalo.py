import os, json, random, asyncio, time, logging
from datetime import datetime, timedelta
import pytz
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters, AIORateLimiter
from telegram.error import RetryAfter

TOKEN = "8384986879:AAGUBtm3Fg0cNUa-IlroraoWQ1M7eMz2PNM"

logging.basicConfig(
    format="%(asctime)s %(levelname)s %(name)s: %(message)s",
    level=logging.INFO,
)

NICKNAMES = [
    "Лепман Коричневый Змей", "Лепман Марафон Коричневых Змей", "Лепман Снюсный Барон", "Лепман Король Желтых Дождей",
    "Лепман Линьчиковый Лежун", "Лепман Животик+2кг", "Лепман Балду Пинатель", "Лепман Унитаз — Это Жизнь",
    "Лепман Железный Снюсоносец", "Лепман Титан Подоконника", "Лепман Властелин Люкса", "Лепман Папа Линьчика",
    "Лепман Гроза Окон", "Лепман Шлёп Утренний", "Лепман Книга-Моча", "Лепман Лежит И Красивый",
    "Лепман 110 Коричневый", "Лепман С Продристью", "Лепман Вечный Балабол", "Лепман Круг Самопотерянных",
    "Верховный Бушист",
    "Главный Анус", "Кишка-Пожиратель", "Бушистый Подзалупин", "Анусоносец", "Кишка Линьчиковая",
    "Повелитель Бушизма и Анусов", "Сипарь С Очком", "Гнойный Линьчикарь", "Магистр Заднепрохода",
    "Трипперный Бушонок", "Кишка-Пердуша", "Анусоразрушитель", "Сипун Глубокого Очка", "Кикшевый Громила",
    "Очконосный Архонт", "Анусоед Линьчиков", "Бушизмовод Очковый", "Кишка-Вонючка", "Сипоносец Анусов",
    "Паховый Линьчикарь", "Заднепроходный Пророк", "Кишка Мясная", "Линьчикоанус", "Очковый Шаман",
    "Кишка-Разрушитель", "Анусный Оракул", "Бушист Сраный", "Гнойно-Сипучий", "Кишка-Вертолёт",
    "Очкодав Бушизма", "Сральный Линьчикарь", "Кикшевый Сосальщик", "Анусообниматель", "Линьчикоразрыватель",
    "Сипарь Очковый", "Кишка-Мочалка", "Бушизмовый Говнарь", "Очковый Кикшевод", "Анусоносный Линьчикарь",
    "Кишка Сырная", "Очкосос Легендарный", "Линьчикоочкоед", "Кишка-Свинтус", "Очкодавец Бушистый",
    "Анусовый Гроза", "Кишка Плесневелая", "Сипарь Глубинный", "Очкоразрушитель Линьчиков", "Кишка Кислотная",
    "Бушизмопердун", "Очковый Повелитель", "Кишка-Венеричка", "Линьчикоочковый", "Гнойно-Кикшевый",
    "Анусоноситель", "Кишка-Хрюша", "Очковый Линьчикарь", "Сипарь Анусный", "Кишка-Жмур", "Очкозавр",
    "Анусораздуватель", "Линьчикоанальный", "Кишка-Брызгун", "Очковый Рыцарь", "Гнойный Очкоед",
    "Кишка-Мазохист", "Анусоочиститель", "Очкокидатель", "Кишка-Червивый", "Бушизмосраколиз",
    "Очковый Инквизитор", "Кишка-Перделка", "Анусотряс", "Сипарь Сральный", "Очкосекущий",
    "Кишка-Заднеприводный", "Линьчикосос Анусов", "Очконосец", "Кишка-Вшивка", "Анусобушонок",
    "Очковый Зверь", "Кишка-Срачмейстер", "Гнойно-Анусный", "Очкотрон 3000", "Кишка-Бушист",
    "Анусодушитель", "Очковый Мрак", "Кишка-Пердач", "Анусорез", "Очковый Линьчикоед", "Кишка-Сипарь",
    "Бушизмочкоед", "Очковый Вонючка", "Кишка-Анусонос", "Сипарь Очковый Грозный", "Попочка с сисечками",
    "Анусоразбойник", "Кишка-Очковерт", "Очковый Линьчикоразрушитель",
    "Лепман Мастер Проливных Дождей", "Лепман Линьчиковый Гладиатор", "Лепман Снюс на Вечер",
    "Лепман Хранитель Преворкаута", "Лепман Писатель Битов", "Лепман Писаться Идём", "Лепман Сношающий Рты",
    "Лепман Легенда Жёлтого Потока", "Лепман Я Реально Красивый", "Лепман Властелин Линьчика", "Лепман Мастер 30 Секунд",
    "Лепман Философ Унитаза", "Лепман Проклятый Линьчикер", "Лепман Шаман Желтых Дождей", "Лепман Снюсный Унитазист",
    "Лепман Разгон До 110", "Лепман Человек-Снюс", "Лепман Битмейкер Линьчика", "Лепман Преворкаутный",
    "Лепман Снюсо-Варвар", "Лепман Гроза Книг-Мочи", "Лепман Железный Преворкаут", "Лепман Жёлтый Поток",
    "Лепман Мочевой Магистр", "Лепман Властелин Балды", "Лепман Линьчиковый Мститель", "Лепман Легенда Снюса",
    "Лепман Книга-Снюс", "Лепман Мастер Бутылочного Дождя", "Лепман Король Продристи", "Лепман Снюсо-Рокер",
    "Лепман Мокрый Линьчик", "Лепман Железный Лежун", "Лепман Преворкаутный Шаман", "Лепман Снюсо-Босс",
    "Лепман Книга-Гроза", "Лепман Жёлтый Призыватель", "Лепман Линьчиковый Принц", "Лепман Гроза Люкса",
    "Лепман Марафонщик Линьчика", "Лепман Папа Продристи", "Лепман Легенда Марафона", "Лепман Железный Снюс-Маг",
    "Лепман Король Оконных Дождей", "Лепман Мастер Потоков", "Лепман Балду-Каратель", "Лепман Снюсный Философ",
    "Лепман Преворкаутный Барон", "Лепман Линьчиковый Разрушитель", "Лепман Гроза Сантехники", "Лепман Жёлтый Маг",
    "Лепман Властелин Продристь", "Лепман Марафон Люксов", "Лепман Железный Балабол", "Лепман Снюсный Бродяга",
    "Лепман Преворкаутный Гладиатор", "Лепман Линьчиковый Певец", "Лепман Мастер Жёлтого Потока", "Лепман Книга-Воин",
    "Лепман Снюсо-Легенда", "Лепман Железный Поточник", "Лепман Гроза 110", "Лепман Марафон Мочи",
    "Лепман Властелин Линьчиковых Ночей", "Лепман Мастер Продристь", "Лепман Снюсный Принц", "Лепман Балду-Ломатель",
    "Лепман Железный Книгач", "Лепман Линьчиковый Шутник", "Лепман Преворкаутный Лев", "Лепман Жёлтый Джедай",
    "Лепман Книга-Гладиатор", "Лепман Снюсо-Герой", "Лепман Мастер Люксов", "Лепман Гроза Линьчика",
    "Лепман Железный Дождевик", "Лепман Преворкаутный Сокол", "Лепман Линьчиковый Левиафан", "Лепман Снюсный Рыцарь",
    "Лепман Легенда Книг", "Лепман Железный Мочевик", "Лепман Преворкаутный Чародей", "Лепман Марафонский Жрец",
    "Лепман Балду-Разрушитель", "Лепман Линьчиковый Орёл", "Лепман Жёлтый Фараон", "Лепман Снюсный Гуру",
    "Лепман Книга-Царь", "Лепман Преворкаутный Волк", "Лепман Железный Шаман", "Лепман Гроза Потоков",
    "Лепман Марафон Линьчика", "Лепман Линьчиковый Шаман", "Лепман Снюсо-Мастер", "Лепман Книга-Властелин",
    "Лепман Жёлтый Гладиатор", "Лепман Преворкаутный Легенд", "Лепман Железный Линьчикер", "Лепман Балду-Монарх",
    "Лепман Линьчиковый Властелин", "Лепман Снюсный Лев", "Лепман Марафонный Джин", "Лепман Жёлтый Босс",
    "Лепман Преворкаутный Папа", "Лепман Книга-Балабол", "Лепман Железный Люкс", "Лепман Снюсо-Бог",
    "Лепман Гроза Марафона", "Лепман Линьчиковый Папа", "Лепман Марафонщик Люксов", "Лепман Жёлтый Гроза",
    "Лепман Балду-Легенда", "Лепман Преворкаутный Орёл", "Лепман Книга-Поток", "Лепман Железный Марафонец",
    "Лепман Снюсо-Властелин", "Лепман Линьчиковый Волк", "Лепман Жёлтый Шаман", "Лепман Балду-Магистр",
    "Лепман Преворкаутный Гроза", "Лепман Книга-Дождевик", "Лепман Железный Поток", "Лепман Снюсо-Орёл",
    "Лепман Линьчиковый Барон", "Лепман Марафонский Волк", "Лепман Жёлтый Легенд", "Лепман Балду-Папа",
    "Лепман Преворкаутный Мастер", "Лепман Книга-Орёл", "Лепман Железный Властелин", "Лепман Снюсо-Джедай",
    "Лепман Линьчиковый Джин", "Лепман Марафонский Лев", "Лепман Жёлтый Призрак", "Лепман Балду-Герой",
    "Лепман Преворкаутный Линьчикер", "Лепман Книга-Гроза", "Лепман Железный Лев", "Лепман Снюсо-Фараон",
    "Лепман Линьчиковый Бог", "Лепман Марафонский Линьчик", "Лепман Жёлтый Книгач", "Лепман Балду-Мочевик",
    "Лепман Преворкаутный Поток", "Лепман Книга-Марафонец", "Лепман Сип-мастер", "Лепман Великий Сипун",
    "Лепман Сип-Барон", "Лепман Легенда Сипа", "Лепман Король Сипа", "Лепман Сипун Гладиатор",
    "Лепман Сип-Гроза", "Лепман Сипун Шаман", "Лепман Сипный Волк", "Лепман Марафон Сипа"
]
BANNED_SUBSTRINGS = {"даун"}
NICKNAMES = [n for n in NICKNAMES if all(b.lower() not in n.lower() for b in BANNED_SUBSTRINGS)]

BTN_GEN = "Сгенерировать погоняло"
STORE_FILE = "channel_binding.json"
DAILY_FILE = "daily_data.json"

_last_call = {}
def _cooldown(chat_id: int, cooldown=1.0) -> bool:
    now = time.monotonic()
    prev = _last_call.get(chat_id, 0)
    if now - prev < cooldown:
        return False
    _last_call[chat_id] = now
    return True

def load_json(file):
    if os.path.exists(file):
        with open(file, "r", encoding="utf-8") as f:
            return json.load(f)
    return {}

def save_json(file, data):
    with open(file, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=2)

def pick_name_html(exclude=None):
    if exclude is None:
        exclude = []
    choices = [n for n in NICKNAMES if n not in exclude] or NICKNAMES
    nickname = random.choice(choices)
    core = nickname.replace("Лепман", "").strip(" —-")
    return f"<b>Лепман</b> — <i>{core}</i>", nickname

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "тыкни кнопку, чтобы выдать рофельное прозвище (•‿•)",
        reply_markup=ReplyKeyboardMarkup([[BTN_GEN]], resize_keyboard=True)
    )

async def nickname_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not _cooldown(update.effective_chat.id):
        return
    html, _ = pick_name_html()
    await update.message.reply_html(html)

async def daily_on(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = str(update.effective_chat.id)
    data = load_json(DAILY_FILE)
    if user_id not in data:
        data[user_id] = {"history": []}
    save_json(DAILY_FILE, data)
    await update.message.reply_text("Буду выдавать тебе погоняло каждый день в 12:00 по МСК ✔️")

async def daily_off(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = str(update.effective_chat.id)
    data = load_json(DAILY_FILE)
    if user_id in data:
        del data[user_id]
        save_json(DAILY_FILE, data)
        await update.message.reply_text("Ежедневная выдача погоняла отключена ❌")
    else:
        await update.message.reply_text("У тебя и так нет автопогоняла.")

async def daily_job(app):
    tz = pytz.timezone("Europe/Moscow")
    while True:
        now = datetime.now(tz)
        target = now.replace(hour=12, minute=0, second=0, microsecond=0)
        if now >= target:
            target += timedelta(days=1)
        await asyncio.sleep((target - now).total_seconds())

        data = load_json(DAILY_FILE)
        for chat_id, info in data.items():
            history = info.get("history", [])
            html, nickname = pick_name_html(exclude=history)
            try:
                await app.bot.send_message(chat_id=int(chat_id), text=f"@{chat_id}, твоё погоняло сегодня — {html}", parse_mode="HTML")
            except Exception as e:
                logging.warning(f"Не удалось отправить {chat_id}: {e}")
            history.append(nickname)
            if len(history) > 7:
                history.pop(0)
            data[chat_id]["history"] = history
        save_json(DAILY_FILE, data)

async def error_handler(update: object, context):
    logging.warning(f"Error: {context.error}")

def main():
    app = ApplicationBuilder().token(TOKEN).job_queue().build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("nickname", nickname_cmd))
    app.add_handler(CommandHandler("daily_on", daily_on))
    app.add_handler(CommandHandler("daily_off", daily_off))

    app.add_error_handler(error_handler)

    app.job_queue.run_once(lambda *_: asyncio.create_task(daily_job(app)), 1)

    app.run_polling()

if __name__ == "__main__":
    main()

